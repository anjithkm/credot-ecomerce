{"version":3,"file":"static/js/417.61f600df.chunk.js","mappings":"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","sources":["component/button/index.tsx","pages/auth/login/useLogin.tsx","component/input/index.tsx","pages/auth/login/index.tsx"],"sourcesContent":["import React, { useState, ComponentProps,ReactElement } from \"react\";\n\ninterface ButtonProps extends ComponentProps<any>{\n    icon?:ReactElement<HTMLImageElement>;\n}\n\ninterface QuantityButtonProps extends ComponentProps<any>{\n  count:number;\n  setCount:any;\n}\n\n\nexport const QuantityButton:React.FC<QuantityButtonProps>=({count=0,setCount,...props})=>{\n\n  return (\n    <div {...props}>\n      <div style={{display:'flex',height:'100%',border:'1px solid #E2E2E2',width:'100%',justifyContent:'center'}} >\n        <button className='count-button' onClick={()=>{setCount(count-1)}} style={{border:'none',width:'100%',display:'flex',cursor:'pointer',outline:'none',backgroundColor:'transparent'}}><img  style={{margin:'auto'}}  src='/assets/icons/minus.svg' alt=\"\"/></button>\n        <div className=\"count\"  style={{display:'flex',justifyContent:'center',width:'100%',alignItems:'center',border:'solid #E2E2E2',borderWidth:'0px 1px 0px 1px',padding:'0px 10px 0px 10px'}} >{count}</div>\n        <button className='count-button' onClick={()=>{setCount(count+1)}} style={{border:'none',display:'flex',width:'100%',cursor:'pointer',outline:'none',backgroundColor:'transparent'}}><img  style={{margin:'auto'}} src='/assets/icons/plus.svg' alt=\"\"/></button>\n      </div>\n    </div>\n    \n  )\n\n}\n\n\nexport const Button:React.FC<ButtonProps>=({icon,...props})=>{\n  \n    return (\n     <button {...props} >\n      <div style={{margin:'auto',display:'flex',height:'fit-content',width:'fit-content',justifyContent:'center'}} >\n       {props.children} {icon}\n       </div>\n    </button>\n    )\n  \n}\n\nexport default  Button;\n  ","import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { login ,clearError} from '@/store/slices/auth';\nimport { params } from '@/utils/apiRequest'\nimport { useAppDispatch, useAppSelector } from '@/store/hooks';\n\ninterface Values {\n  username: string;\n  password: string;\n}\n// .email(\"The email you entered is incorrect. Try again.\"),\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required('User name is mandatory.'),\n  password: Yup.string().required('Password is mandatory.')\n});\n\n\nconst useLogin = () => {\n\n  const dispatch = useAppDispatch();\n  const { error } = useAppSelector(store => store.auth);\n\n  const HandleSubmit = async ( values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n\n      setSubmitting(true);\n\n      const params : params = {\n        payloadBody:{\n          username: values.username,\n          password: values.password,\n        }\n      };\n\n      dispatch(login(params));\n      setSubmitting(false);\n\n\n  };\n\n  const HandleClearError = ()=>{\n    dispatch(clearError())\n  }\n\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: LoginSchema,\n    onSubmit: HandleSubmit,\n    enableReinitialize: true,\n  });\n\n  return {formik, error , HandleClearError };\n  \n};\n\nexport default useLogin;\n","import React, { useState, ComponentProps,ReactElement } from \"react\";\n\ninterface InputProps extends ComponentProps<any>{\nerror?:string\n}\n\nconst Input:React.FC<InputProps>=({error,...props})=>{\n  \n    return (\n        <div>\n            <input {...props} >\n\n            </input>\n            <p className=\"input-error\">{error}</p>\n        </div>\n  \n    )\n  \n}\n\nexport default Input;","import React from \"react\";\nimport useLogin from \"./useLogin\";\nimport Button from \"@/component/button\";\nimport Input from \"@/component/input\";\n\ntype FieldType = {\n  username?: string;\n  password?: string;\n  remember?: string;\n};\n\nconst LoginPage: React.FC = () => {\n\n  const { formik, error , HandleClearError} = useLogin();\n\n  return(\n    <div className='login'>\n    <div className='login-form'>\n     <p className='login-title' style={{}}>Login/Register to your account</p>\n     <p className='login-sub-title'>Lorem ipsum dolor sit amet consectetur. Sapien ut libero sed lacinia egestas placerat ut sagittionec.</p>\n        <div className='login-form-container' style={{display:'flex',flexDirection:'column',margin:'auto auto 0px auto',width:'538px',marginTop:'auto'}}>\n         <Input className=\"login-input\"  name=\"username\"\n          onFocus={HandleClearError}\n          placeholder=\"Enter your user name\"\n          type=\"text\"\n          disabled={formik.isSubmitting}\n          value={formik.values.username}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.username && formik.errors.username\n              ? formik.errors.username\n              : ''\n          }\n          onBlur={formik.handleBlur}\n          onKeyDown={(e: any) => {\n            if (e.key === 'Enter') formik.handleSubmit();\n          }} />\n         <Input className=\"login-input\"  name=\"password\"\n          onFocus={HandleClearError}\n          placeholder=\"Enter your user password\"\n          type=\"password\"\n          disabled={formik.isSubmitting}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.password && formik.errors.password\n              ? formik.errors.password\n              : ''\n          }\n          onBlur={formik.handleBlur}\n          onKeyDown={(e: any) => {\n            if (e.key === 'Enter') formik.handleSubmit();\n          }} />\n         <Button className='boxed login-button'    disabled={!formik.isValid || formik.isSubmitting}\n              onClick={() => {\n                formik.handleSubmit();\n              }} >login</Button>\n          <div className=\"input-error login-error\">\n              { error && \"Invalid user name or password. Try again\"} \n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\n\n\n\nexport default LoginPage;\n\n\n\n"],"names":["QuantityButton","_ref","count","setCount","props","_jsx","children","_jsxs","style","display","height","border","width","justifyContent","className","onClick","cursor","outline","backgroundColor","margin","src","alt","alignItems","borderWidth","padding","Button","_ref2","icon","LoginSchema","Yup","shape","username","required","password","useLogin","dispatch","useAppDispatch","error","useAppSelector","store","auth","formik","useFormik","initialValues","validationSchema","onSubmit","async","values","setSubmitting","params","payloadBody","login","enableReinitialize","HandleClearError","clearError","LoginPage","flexDirection","marginTop","Input","name","onFocus","placeholder","type","disabled","isSubmitting","value","onChange","handleChange","touched","errors","onBlur","handleBlur","onKeyDown","e","key","handleSubmit","isValid"],"sourceRoot":""}